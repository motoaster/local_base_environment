# 連携・処理を行うコンテナを記載
services:
  # Webサーバー
  app:
    # コンテナ名指定
    container_name: web-front
    # Dockerfileを使用したビルド実施
    build: ./docker/php
    # 繋げるポート番号を指定
    ports:
    - 8000:80
    # 連携するディレクトリを指定
    # こちらでは[Document Directory]の連携を行っている
    volumes:
    - ./front:/var/www/html
    # DBサーバー
  api:
    # コンテナ名指定
    container_name: web-api
    # Dockerfileを使用したビルド実施
    build: ./docker/python
    # 繋げるポート番号を指定
    ports:
    - 5001:80
    # 連携するディレクトリを指定
    # こちらでは[Document Directory]の連携を行っている
    volumes:
    - ./api:/usr/src/python
    # DBサーバー
  mysql:
  # コンテナ名指定
    container_name: mysql
    # イメージを使用したビルド実施
    image: mysql:5.7
    # 連携するディレクトリを指定
    # こちらではMysqlの設定ファイルを連携している
    volumes:
    - ./mysql:/var/lib/mysq
    # 繋げるポート番号を指定
    ports:
    - 3306:3306
    # 初期環境の作成
    environment:
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_DATABASE=localdb
    - MYSQL_USER=tester
    - MYSQL_PASSWORD=test0123
  #実行順序を変更して実施
volumes:
  mysql: